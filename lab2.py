from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QFileDialog, QWidget, QPushButton, QFrame, QColorDialog
from PyQt5.QtGui import QColor
from drawing import Drawing
import matplotlib.pyplot as plt
from PIL import Image, ImageDraw 
import numpy as np


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(750, 450)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(750, 450))
        MainWindow.setMaximumSize(QtCore.QSize(750, 450))
        font = QtGui.QFont()
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        MainWindow.setFont(font)
        MainWindow.setMouseTracking(False)
        MainWindow.setTabletTracking(False)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        # self.graphicsView.setEnabled(True)
        self.graphicsView.setGeometry(QtCore.QRect(320, 10, 400, 400))
        self.graphicsView.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.graphicsView.setFrameShadow(QtWidgets.QFrame.Plain)
        self.draft = Image.open("image.jpg")
        self.draft = self.draft.save("new_image.jpg")
        self.graphicsView.setObjectName("graphicsView")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 120, 270, 201))
        self.frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setLineWidth(0)
        self.frame.setObjectName("frame")
        self.startLabel = QtWidgets.QLabel(self.frame)
        self.startLabel.setGeometry(QtCore.QRect(0, 16, 201, 16))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.startLabel.setFont(font)
        self.startLabel.setObjectName("startLabel")
        self.x1Label = QtWidgets.QLabel(self.frame)
        self.x1Label.setGeometry(QtCore.QRect(0, 39, 60, 20))
        self.x1Label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.x1Label.setObjectName("x1Label")
        self.y1Label = QtWidgets.QLabel(self.frame)
        self.y1Label.setGeometry(QtCore.QRect(0, 70, 60, 20))
        self.y1Label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.y1Label.setObjectName("y1Label")
        self.x2Label = QtWidgets.QLabel(self.frame)
        self.x2Label.setGeometry(QtCore.QRect(0, 130, 60, 20))
        self.x2Label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.x2Label.setObjectName("x2Label")
        self.y2Label = QtWidgets.QLabel(self.frame)
        self.y2Label.setGeometry(QtCore.QRect(0, 162, 60, 16))
        self.y2Label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.y2Label.setObjectName("y2Label")
        self.endLabel = QtWidgets.QLabel(self.frame)
        self.endLabel.setGeometry(QtCore.QRect(0, 108, 201, 16))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.endLabel.setFont(font)
        self.endLabel.setObjectName("endLabel")
        self.x1SpinBox = QtWidgets.QSpinBox(self.frame)
        self.x1SpinBox.setGeometry(QtCore.QRect(70, 37, 68, 24))
        self.x1SpinBox.setObjectName("x1SpinBox")
        self.y1SpinBox = QtWidgets.QSpinBox(self.frame)
        self.y1SpinBox.setGeometry(QtCore.QRect(70, 68, 68, 24))
        self.y1SpinBox.setObjectName("y1SpinBox")
        self.x2SpinBox = QtWidgets.QSpinBox(self.frame)
        self.x2SpinBox.setGeometry(QtCore.QRect(70, 130, 68, 24))
        self.x2SpinBox.setObjectName("x2SpinBox")
        self.y2SpinBox = QtWidgets.QSpinBox(self.frame)
        self.y2SpinBox.setGeometry(QtCore.QRect(70, 160, 68, 24))
        self.y2SpinBox.setObjectName("y2SpinBox")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(30, 50, 270, 61))
        self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(0)
        self.frame_2.setObjectName("frame_2")
        self.choosingLabel = QtWidgets.QLabel(self.frame_2)
        self.choosingLabel.setGeometry(QtCore.QRect(0, 9, 131, 16))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.choosingLabel.setFont(font)
        self.choosingLabel.setObjectName("choosingLabel")
        self.comboBox = QtWidgets.QComboBox(self.frame_2)
        self.comboBox.setGeometry(QtCore.QRect(-2, 32, 104, 26))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(30, 340, 270, 71))
        self.frame_3.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_3.setLineWidth(0)
        self.frame_3.setObjectName("frame_3")

        self.colorLabel = QtWidgets.QLabel(self.frame_3)
        self.colorLabel.setGeometry(QtCore.QRect(0, 6, 81, 16))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.colorLabel.setFont(font)
        self.colorLabel.setObjectName("colorLabel")

        self.colorPushButton = QtWidgets.QPushButton(self.frame_3)
        self.colorPushButton.setGeometry(QtCore.QRect(80, 0, 113, 32))
        self.colorPushButton.setObjectName("colorPushButton")

        self.pickedColorLabel = QtWidgets.QLabel(self.frame_3)
        self.pickedColorLabel.setGeometry(QtCore.QRect(255, 6, 15, 15))
        self.pickedColorLabel.setObjectName("pickedColorLabel")
        self.pickedColorLabel.hide()

        self.drawPushButton = QtWidgets.QPushButton(self.centralwidget)
        self.drawPushButton.setGeometry(QtCore.QRect(24, 415, 113, 32))
        self.drawPushButton.setObjectName("drawPushButton")

        self.erasePushButton = QtWidgets.QPushButton(self.centralwidget)
        self.erasePushButton.setGeometry(QtCore.QRect(613, 415, 113, 32))
        self.erasePushButton.setObjectName("erasePushButton")

        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(30, 110, 270, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(30, 321, 270, 16))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setGeometry(QtCore.QRect(30, 10, 270, 30))
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.title.setFont(font)
        self.title.setObjectName("title")
        self.line_1 = QtWidgets.QFrame(self.centralwidget)
        self.line_1.setGeometry(QtCore.QRect(30, 40, 270, 16))
        self.line_1.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_1.setObjectName("line_1")
        MainWindow.setCentralWidget(self.centralwidget)

        self.frame.setDisabled(True)
        self.frame_3.setDisabled(True)
        self.drawPushButton.hide()
        self.erasePushButton.setDisabled(True)
        self.comboBox.activated[str].connect(self.onChanged_comboBox)
        self.x1SpinBox.setRange(0, 400)
        self.y1SpinBox.setRange(0, 400)
        self.x2SpinBox.setRange(0, 400)
        self.y2SpinBox.setRange(0, 400)
        self.colorPushButton.clicked.connect(self.pick_Color)
        self.drawPushButton.clicked.connect(self.drawButton_clicked)
        self.erasePushButton.clicked.connect(self.eraseButton_clicked)
        
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Lab 2"))
        self.startLabel.setText(_translate("MainWindow", "Start point"))
        self.x1Label.setText(_translate("MainWindow", "X"))
        self.y1Label.setText(_translate("MainWindow", "Y"))
        self.x2Label.setText(_translate("MainWindow", "X"))
        self.y2Label.setText(_translate("MainWindow", "Y"))
        self.endLabel.setText(_translate("MainWindow", "End point"))
        self.choosingLabel.setText(_translate("MainWindow", "Choose shape"))
        self.comboBox.setItemText(0, _translate("MainWindow", ""))
        self.comboBox.setItemText(1, _translate("MainWindow", "Line"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Circle"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Ellipse"))
        self.colorLabel.setText(_translate("MainWindow", "Color"))
        self.colorPushButton.setText(_translate("MainWindow", "Pick Color"))
        self.drawPushButton.setText(_translate("MainWindow", "Draw"))
        self.erasePushButton.setText(_translate("MainWindow", "Erase"))
        self.title.setText(_translate("MainWindow", "Bresenham algorithms"))

    def onChanged_comboBox(self):
        self.text = str(self.comboBox.currentText())
        print(self.text)
        self.drawPushButton.show()
        self.x2Label.setStyleSheet("#x2Label { font-size: 13pt;}")
        self.y2Label.setStyleSheet("#x2Label { font-size: 13pt;}")
        self.y2Label.show()
        self.y2SpinBox.show()
        if self.text == "Line":
            self.frame.setDisabled(False)
            self.frame_3.setDisabled(False)
            self.startLabel.setText("Start point")
            self.endLabel.setText("End point")
            self.x2Label.setText("X")
            self.y2Label.setText("Y")
            self.drawPushButton.setText("Draw line")
        elif self.text == "Circle":
            self.frame.setDisabled(False)
            self.frame_3.setDisabled(False)
            self.startLabel.setText("Center point")
            self.endLabel.setText("Circle radius")
            self.x2Label.setText("r")
            self.y2Label.hide()
            self.y2SpinBox.hide()
            self.drawPushButton.setText("Draw circle")
        elif self.text == "Ellipse":
            self.startLabel.setText("Start points")
            self.frame.setDisabled(False)
            self.frame_3.setDisabled(False)
            self.endLabel.setText("End points( > Start points)")
            self.x2Label.setText("X")
            self.y2Label.setText("Y")
            self.y2Label.show()
            self.y2SpinBox.show()
            self.drawPushButton.setText("Draw ellipse")
        else:
            self.frame.setDisabled(True)
            self.frame_3.setDisabled(True)
            self.drawPushButton.hide()

    def pick_Color(self):
        self.color = QColorDialog.getColor()
        self.color_rgb = self.color.getRgb()
        print(self.color_rgb)
        if self.color.isValid():
            self.pickedColorLabel.setStyleSheet("background-color: "+str(self.color.name())+";") 
            self.pickedColorLabel.show()
        else:
            self.pickedColorLabel.hide()

    def drawButton_clicked(self):
        self.erasePushButton.setDisabled(False)
    
        self.draft = "new_image.jpg"
        d = Drawing(self.color_rgb, str(self.draft))
        if self.text == "Line":
            d.draw_line(self.x1SpinBox.value(),self.y1SpinBox.value(),self.x2SpinBox.value(),self.y2SpinBox.value()) 

        elif self.text == "Circle":
            d.draw_circle(self.x1SpinBox.value(), self.y1SpinBox.value(), self.x2SpinBox.value())
        elif self.text == "Ellipse":
            d.draw_ellipse(self.x1SpinBox.value(),self.y1SpinBox.value(),self.x2SpinBox.value(),self.y2SpinBox.value()) 
        d.show_image()
        d.save_image()  
        self.graphicsView.setStyleSheet("background-image: url(new_image.jpg);")
        print("clicked")


    def eraseButton_clicked(self):
        self.draft = Image.open("image.jpg")
        self.draft = self.draft.save("new_image.jpg")
        self.graphicsView.setStyleSheet("background-image: url(new_image.jpg);")
        self.erasePushButton.setDisabled(True)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
